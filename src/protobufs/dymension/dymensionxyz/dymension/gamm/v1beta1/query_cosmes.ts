// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file dymensionxyz/dymension/gamm/v1beta1/query.proto (package dymensionxyz.dymension.gamm.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { QueryCalcExitPoolCoinsFromSharesRequest, QueryCalcExitPoolCoinsFromSharesResponse, QueryCalcJoinPoolNoSwapSharesRequest, QueryCalcJoinPoolNoSwapSharesResponse, QueryCalcJoinPoolSharesRequest, QueryCalcJoinPoolSharesResponse, QueryNumPoolsRequest, QueryNumPoolsResponse, QueryParamsRequest, QueryParamsResponse, QueryPoolParamsRequest, QueryPoolParamsResponse, QueryPoolRequest, QueryPoolResponse, QueryPoolsRequest, QueryPoolsResponse, QueryPoolsWithFilterRequest, QueryPoolsWithFilterResponse, QuerySpotPriceRequest, QuerySpotPriceResponse, QuerySwapExactAmountInRequest, QuerySwapExactAmountInResponse, QuerySwapExactAmountOutRequest, QuerySwapExactAmountOutResponse, QueryTotalLiquidityRequest, QueryTotalLiquidityResponse, QueryTotalPoolLiquidityRequest, QueryTotalPoolLiquidityResponse, QueryTotalSharesRequest, QueryTotalSharesResponse } from "./query_pb.js";

const TYPE_NAME = "dymensionxyz.dymension.gamm.v1beta1.Query";

/**
 * Params returns lockup params.
 *
 * @generated from rpc dymensionxyz.dymension.gamm.v1beta1.Query.Params
 */
export const QueryParamsService = {
  typeName: TYPE_NAME,
  method: "Params",
  Request: QueryParamsRequest,
  Response: QueryParamsResponse,
} as const;

/**
 * @generated from rpc dymensionxyz.dymension.gamm.v1beta1.Query.Pools
 */
export const QueryPoolsService = {
  typeName: TYPE_NAME,
  method: "Pools",
  Request: QueryPoolsRequest,
  Response: QueryPoolsResponse,
} as const;

/**
 * Deprecated: please use the alternative in x/poolmanager
 *
 * @generated from rpc dymensionxyz.dymension.gamm.v1beta1.Query.NumPools
 * @deprecated
 */
export const QueryNumPoolsService = {
  typeName: TYPE_NAME,
  method: "NumPools",
  Request: QueryNumPoolsRequest,
  Response: QueryNumPoolsResponse,
} as const;

/**
 * @generated from rpc dymensionxyz.dymension.gamm.v1beta1.Query.TotalLiquidity
 */
export const QueryTotalLiquidityService = {
  typeName: TYPE_NAME,
  method: "TotalLiquidity",
  Request: QueryTotalLiquidityRequest,
  Response: QueryTotalLiquidityResponse,
} as const;

/**
 * PoolsWithFilter allows you to query specific pools with requested
 * parameters
 *
 * @generated from rpc dymensionxyz.dymension.gamm.v1beta1.Query.PoolsWithFilter
 */
export const QueryPoolsWithFilterService = {
  typeName: TYPE_NAME,
  method: "PoolsWithFilter",
  Request: QueryPoolsWithFilterRequest,
  Response: QueryPoolsWithFilterResponse,
} as const;

/**
 * Per Pool gRPC Endpoints
 *
 * @generated from rpc dymensionxyz.dymension.gamm.v1beta1.Query.Pool
 */
export const QueryPoolService = {
  typeName: TYPE_NAME,
  method: "Pool",
  Request: QueryPoolRequest,
  Response: QueryPoolResponse,
} as const;

/**
 * Simulates joining pool without a swap. Returns the amount of shares you'd
 * get and tokens needed to provide
 *
 * @generated from rpc dymensionxyz.dymension.gamm.v1beta1.Query.CalcJoinPoolNoSwapShares
 */
export const QueryCalcJoinPoolNoSwapSharesService = {
  typeName: TYPE_NAME,
  method: "CalcJoinPoolNoSwapShares",
  Request: QueryCalcJoinPoolNoSwapSharesRequest,
  Response: QueryCalcJoinPoolNoSwapSharesResponse,
} as const;

/**
 * @generated from rpc dymensionxyz.dymension.gamm.v1beta1.Query.CalcJoinPoolShares
 */
export const QueryCalcJoinPoolSharesService = {
  typeName: TYPE_NAME,
  method: "CalcJoinPoolShares",
  Request: QueryCalcJoinPoolSharesRequest,
  Response: QueryCalcJoinPoolSharesResponse,
} as const;

/**
 * @generated from rpc dymensionxyz.dymension.gamm.v1beta1.Query.CalcExitPoolCoinsFromShares
 */
export const QueryCalcExitPoolCoinsFromSharesService = {
  typeName: TYPE_NAME,
  method: "CalcExitPoolCoinsFromShares",
  Request: QueryCalcExitPoolCoinsFromSharesRequest,
  Response: QueryCalcExitPoolCoinsFromSharesResponse,
} as const;

/**
 * @generated from rpc dymensionxyz.dymension.gamm.v1beta1.Query.PoolParams
 */
export const QueryPoolParamsService = {
  typeName: TYPE_NAME,
  method: "PoolParams",
  Request: QueryPoolParamsRequest,
  Response: QueryPoolParamsResponse,
} as const;

/**
 * @generated from rpc dymensionxyz.dymension.gamm.v1beta1.Query.TotalPoolLiquidity
 */
export const QueryTotalPoolLiquidityService = {
  typeName: TYPE_NAME,
  method: "TotalPoolLiquidity",
  Request: QueryTotalPoolLiquidityRequest,
  Response: QueryTotalPoolLiquidityResponse,
} as const;

/**
 * @generated from rpc dymensionxyz.dymension.gamm.v1beta1.Query.TotalShares
 */
export const QueryTotalSharesService = {
  typeName: TYPE_NAME,
  method: "TotalShares",
  Request: QueryTotalSharesRequest,
  Response: QueryTotalSharesResponse,
} as const;

/**
 * SpotPrice defines a gRPC query handler that returns the spot price given
 * a base denomination and a quote denomination.
 *
 * @generated from rpc dymensionxyz.dymension.gamm.v1beta1.Query.SpotPrice
 * @deprecated
 */
export const QuerySpotPriceService = {
  typeName: TYPE_NAME,
  method: "SpotPrice",
  Request: QuerySpotPriceRequest,
  Response: QuerySpotPriceResponse,
} as const;

/**
 * @generated from rpc dymensionxyz.dymension.gamm.v1beta1.Query.EstimateSwapExactAmountIn
 */
export const QueryEstimateSwapExactAmountInService = {
  typeName: TYPE_NAME,
  method: "EstimateSwapExactAmountIn",
  Request: QuerySwapExactAmountInRequest,
  Response: QuerySwapExactAmountInResponse,
} as const;

/**
 * @generated from rpc dymensionxyz.dymension.gamm.v1beta1.Query.EstimateSwapExactAmountOut
 */
export const QueryEstimateSwapExactAmountOutService = {
  typeName: TYPE_NAME,
  method: "EstimateSwapExactAmountOut",
  Request: QuerySwapExactAmountOutRequest,
  Response: QuerySwapExactAmountOutResponse,
} as const;

