// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file injective/peggy/v1/params.proto (package injective.peggy.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { Coin } from "../../../cosmos/base/v1beta1/coin_pb.js";

/**
 * @generated from message injective.peggy.v1.Params
 */
export class Params extends Message<Params> {
  /**
   * @generated from field: string peggy_id = 1;
   */
  peggyId = "";

  /**
   * @generated from field: string contract_source_hash = 2;
   */
  contractSourceHash = "";

  /**
   * @generated from field: string bridge_ethereum_address = 3;
   */
  bridgeEthereumAddress = "";

  /**
   * @generated from field: uint64 bridge_chain_id = 4;
   */
  bridgeChainId = protoInt64.zero;

  /**
   * @generated from field: uint64 signed_valsets_window = 5;
   */
  signedValsetsWindow = protoInt64.zero;

  /**
   * @generated from field: uint64 signed_batches_window = 6;
   */
  signedBatchesWindow = protoInt64.zero;

  /**
   * @generated from field: uint64 signed_claims_window = 7;
   */
  signedClaimsWindow = protoInt64.zero;

  /**
   * @generated from field: uint64 target_batch_timeout = 8;
   */
  targetBatchTimeout = protoInt64.zero;

  /**
   * @generated from field: uint64 average_block_time = 9;
   */
  averageBlockTime = protoInt64.zero;

  /**
   * @generated from field: uint64 average_ethereum_block_time = 10;
   */
  averageEthereumBlockTime = protoInt64.zero;

  /**
   * @generated from field: bytes slash_fraction_valset = 11;
   */
  slashFractionValset = new Uint8Array(0);

  /**
   * @generated from field: bytes slash_fraction_batch = 12;
   */
  slashFractionBatch = new Uint8Array(0);

  /**
   * @generated from field: bytes slash_fraction_claim = 13;
   */
  slashFractionClaim = new Uint8Array(0);

  /**
   * @generated from field: bytes slash_fraction_conflicting_claim = 14;
   */
  slashFractionConflictingClaim = new Uint8Array(0);

  /**
   * @generated from field: uint64 unbond_slashing_valsets_window = 15;
   */
  unbondSlashingValsetsWindow = protoInt64.zero;

  /**
   * @generated from field: bytes slash_fraction_bad_eth_signature = 16;
   */
  slashFractionBadEthSignature = new Uint8Array(0);

  /**
   * @generated from field: string cosmos_coin_denom = 17;
   */
  cosmosCoinDenom = "";

  /**
   * @generated from field: string cosmos_coin_erc20_contract = 18;
   */
  cosmosCoinErc20Contract = "";

  /**
   * @generated from field: bool claim_slashing_enabled = 19;
   */
  claimSlashingEnabled = false;

  /**
   * @generated from field: uint64 bridge_contract_start_height = 20;
   */
  bridgeContractStartHeight = protoInt64.zero;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin valset_reward = 21;
   */
  valsetReward?: Coin;

  /**
   * @generated from field: repeated string admins = 22;
   */
  admins: string[] = [];

  constructor(data?: PartialMessage<Params>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "injective.peggy.v1.Params";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "peggy_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "contract_source_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "bridge_ethereum_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "bridge_chain_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "signed_valsets_window", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 6, name: "signed_batches_window", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 7, name: "signed_claims_window", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "target_batch_timeout", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "average_block_time", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "average_ethereum_block_time", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "slash_fraction_valset", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 12, name: "slash_fraction_batch", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 13, name: "slash_fraction_claim", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 14, name: "slash_fraction_conflicting_claim", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 15, name: "unbond_slashing_valsets_window", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "slash_fraction_bad_eth_signature", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 17, name: "cosmos_coin_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 18, name: "cosmos_coin_erc20_contract", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "claim_slashing_enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 20, name: "bridge_contract_start_height", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 21, name: "valset_reward", kind: "message", T: Coin },
    { no: 22, name: "admins", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Params {
    return new Params().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Params {
    return new Params().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Params {
    return new Params().fromJsonString(jsonString, options);
  }

  static equals(a: Params | PlainMessage<Params> | undefined, b: Params | PlainMessage<Params> | undefined): boolean {
    return proto3.util.equals(Params, a, b);
  }
}

