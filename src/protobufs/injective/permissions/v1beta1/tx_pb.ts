// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file injective/permissions/v1beta1/tx.proto (package injective.permissions.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Params } from "./params_pb.js";
import { AddressRoles, Namespace, Role } from "./permissions_pb.js";

/**
 * @generated from message injective.permissions.v1beta1.MsgUpdateParams
 */
export class MsgUpdateParams extends Message<MsgUpdateParams> {
  /**
   * authority is the address of the governance account.
   *
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * params defines the permissions parameters to update.
   *
   * NOTE: All parameters must be supplied.
   *
   * @generated from field: injective.permissions.v1beta1.Params params = 2;
   */
  params?: Params;

  constructor(data?: PartialMessage<MsgUpdateParams>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "injective.permissions.v1beta1.MsgUpdateParams";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "params", kind: "message", T: Params },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined, b: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined): boolean {
    return proto3.util.equals(MsgUpdateParams, a, b);
  }
}

/**
 * @generated from message injective.permissions.v1beta1.MsgUpdateParamsResponse
 */
export class MsgUpdateParamsResponse extends Message<MsgUpdateParamsResponse> {
  constructor(data?: PartialMessage<MsgUpdateParamsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "injective.permissions.v1beta1.MsgUpdateParamsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined, b: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateParamsResponse, a, b);
  }
}

/**
 * @generated from message injective.permissions.v1beta1.MsgCreateNamespace
 */
export class MsgCreateNamespace extends Message<MsgCreateNamespace> {
  /**
   * @generated from field: string sender = 1;
   */
  sender = "";

  /**
   * @generated from field: injective.permissions.v1beta1.Namespace namespace = 2;
   */
  namespace?: Namespace;

  constructor(data?: PartialMessage<MsgCreateNamespace>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "injective.permissions.v1beta1.MsgCreateNamespace";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "namespace", kind: "message", T: Namespace },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCreateNamespace {
    return new MsgCreateNamespace().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCreateNamespace {
    return new MsgCreateNamespace().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCreateNamespace {
    return new MsgCreateNamespace().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCreateNamespace | PlainMessage<MsgCreateNamespace> | undefined, b: MsgCreateNamespace | PlainMessage<MsgCreateNamespace> | undefined): boolean {
    return proto3.util.equals(MsgCreateNamespace, a, b);
  }
}

/**
 * @generated from message injective.permissions.v1beta1.MsgCreateNamespaceResponse
 */
export class MsgCreateNamespaceResponse extends Message<MsgCreateNamespaceResponse> {
  constructor(data?: PartialMessage<MsgCreateNamespaceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "injective.permissions.v1beta1.MsgCreateNamespaceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCreateNamespaceResponse {
    return new MsgCreateNamespaceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCreateNamespaceResponse {
    return new MsgCreateNamespaceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCreateNamespaceResponse {
    return new MsgCreateNamespaceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCreateNamespaceResponse | PlainMessage<MsgCreateNamespaceResponse> | undefined, b: MsgCreateNamespaceResponse | PlainMessage<MsgCreateNamespaceResponse> | undefined): boolean {
    return proto3.util.equals(MsgCreateNamespaceResponse, a, b);
  }
}

/**
 * @generated from message injective.permissions.v1beta1.MsgDeleteNamespace
 */
export class MsgDeleteNamespace extends Message<MsgDeleteNamespace> {
  /**
   * @generated from field: string sender = 1;
   */
  sender = "";

  /**
   * @generated from field: string namespace_denom = 2;
   */
  namespaceDenom = "";

  constructor(data?: PartialMessage<MsgDeleteNamespace>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "injective.permissions.v1beta1.MsgDeleteNamespace";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "namespace_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgDeleteNamespace {
    return new MsgDeleteNamespace().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgDeleteNamespace {
    return new MsgDeleteNamespace().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgDeleteNamespace {
    return new MsgDeleteNamespace().fromJsonString(jsonString, options);
  }

  static equals(a: MsgDeleteNamespace | PlainMessage<MsgDeleteNamespace> | undefined, b: MsgDeleteNamespace | PlainMessage<MsgDeleteNamespace> | undefined): boolean {
    return proto3.util.equals(MsgDeleteNamespace, a, b);
  }
}

/**
 * @generated from message injective.permissions.v1beta1.MsgDeleteNamespaceResponse
 */
export class MsgDeleteNamespaceResponse extends Message<MsgDeleteNamespaceResponse> {
  constructor(data?: PartialMessage<MsgDeleteNamespaceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "injective.permissions.v1beta1.MsgDeleteNamespaceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgDeleteNamespaceResponse {
    return new MsgDeleteNamespaceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgDeleteNamespaceResponse {
    return new MsgDeleteNamespaceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgDeleteNamespaceResponse {
    return new MsgDeleteNamespaceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgDeleteNamespaceResponse | PlainMessage<MsgDeleteNamespaceResponse> | undefined, b: MsgDeleteNamespaceResponse | PlainMessage<MsgDeleteNamespaceResponse> | undefined): boolean {
    return proto3.util.equals(MsgDeleteNamespaceResponse, a, b);
  }
}

/**
 * @generated from message injective.permissions.v1beta1.MsgUpdateNamespace
 */
export class MsgUpdateNamespace extends Message<MsgUpdateNamespace> {
  /**
   * @generated from field: string sender = 1;
   */
  sender = "";

  /**
   * namespace denom to which this updates are applied
   *
   * @generated from field: string namespace_denom = 2;
   */
  namespaceDenom = "";

  /**
   * address of smart contract to apply code-based restrictions
   *
   * @generated from field: injective.permissions.v1beta1.MsgUpdateNamespace.MsgSetWasmHook wasm_hook = 3;
   */
  wasmHook?: MsgUpdateNamespace_MsgSetWasmHook;

  /**
   * @generated from field: injective.permissions.v1beta1.MsgUpdateNamespace.MsgSetMintsPaused mints_paused = 4;
   */
  mintsPaused?: MsgUpdateNamespace_MsgSetMintsPaused;

  /**
   * @generated from field: injective.permissions.v1beta1.MsgUpdateNamespace.MsgSetSendsPaused sends_paused = 5;
   */
  sendsPaused?: MsgUpdateNamespace_MsgSetSendsPaused;

  /**
   * @generated from field: injective.permissions.v1beta1.MsgUpdateNamespace.MsgSetBurnsPaused burns_paused = 6;
   */
  burnsPaused?: MsgUpdateNamespace_MsgSetBurnsPaused;

  constructor(data?: PartialMessage<MsgUpdateNamespace>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "injective.permissions.v1beta1.MsgUpdateNamespace";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "namespace_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "wasm_hook", kind: "message", T: MsgUpdateNamespace_MsgSetWasmHook },
    { no: 4, name: "mints_paused", kind: "message", T: MsgUpdateNamespace_MsgSetMintsPaused },
    { no: 5, name: "sends_paused", kind: "message", T: MsgUpdateNamespace_MsgSetSendsPaused },
    { no: 6, name: "burns_paused", kind: "message", T: MsgUpdateNamespace_MsgSetBurnsPaused },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateNamespace {
    return new MsgUpdateNamespace().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateNamespace {
    return new MsgUpdateNamespace().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateNamespace {
    return new MsgUpdateNamespace().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateNamespace | PlainMessage<MsgUpdateNamespace> | undefined, b: MsgUpdateNamespace | PlainMessage<MsgUpdateNamespace> | undefined): boolean {
    return proto3.util.equals(MsgUpdateNamespace, a, b);
  }
}

/**
 * @generated from message injective.permissions.v1beta1.MsgUpdateNamespace.MsgSetWasmHook
 */
export class MsgUpdateNamespace_MsgSetWasmHook extends Message<MsgUpdateNamespace_MsgSetWasmHook> {
  /**
   * @generated from field: string new_value = 1;
   */
  newValue = "";

  constructor(data?: PartialMessage<MsgUpdateNamespace_MsgSetWasmHook>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "injective.permissions.v1beta1.MsgUpdateNamespace.MsgSetWasmHook";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "new_value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateNamespace_MsgSetWasmHook {
    return new MsgUpdateNamespace_MsgSetWasmHook().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateNamespace_MsgSetWasmHook {
    return new MsgUpdateNamespace_MsgSetWasmHook().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateNamespace_MsgSetWasmHook {
    return new MsgUpdateNamespace_MsgSetWasmHook().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateNamespace_MsgSetWasmHook | PlainMessage<MsgUpdateNamespace_MsgSetWasmHook> | undefined, b: MsgUpdateNamespace_MsgSetWasmHook | PlainMessage<MsgUpdateNamespace_MsgSetWasmHook> | undefined): boolean {
    return proto3.util.equals(MsgUpdateNamespace_MsgSetWasmHook, a, b);
  }
}

/**
 * @generated from message injective.permissions.v1beta1.MsgUpdateNamespace.MsgSetMintsPaused
 */
export class MsgUpdateNamespace_MsgSetMintsPaused extends Message<MsgUpdateNamespace_MsgSetMintsPaused> {
  /**
   * @generated from field: bool new_value = 1;
   */
  newValue = false;

  constructor(data?: PartialMessage<MsgUpdateNamespace_MsgSetMintsPaused>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "injective.permissions.v1beta1.MsgUpdateNamespace.MsgSetMintsPaused";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "new_value", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateNamespace_MsgSetMintsPaused {
    return new MsgUpdateNamespace_MsgSetMintsPaused().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateNamespace_MsgSetMintsPaused {
    return new MsgUpdateNamespace_MsgSetMintsPaused().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateNamespace_MsgSetMintsPaused {
    return new MsgUpdateNamespace_MsgSetMintsPaused().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateNamespace_MsgSetMintsPaused | PlainMessage<MsgUpdateNamespace_MsgSetMintsPaused> | undefined, b: MsgUpdateNamespace_MsgSetMintsPaused | PlainMessage<MsgUpdateNamespace_MsgSetMintsPaused> | undefined): boolean {
    return proto3.util.equals(MsgUpdateNamespace_MsgSetMintsPaused, a, b);
  }
}

/**
 * @generated from message injective.permissions.v1beta1.MsgUpdateNamespace.MsgSetSendsPaused
 */
export class MsgUpdateNamespace_MsgSetSendsPaused extends Message<MsgUpdateNamespace_MsgSetSendsPaused> {
  /**
   * @generated from field: bool new_value = 1;
   */
  newValue = false;

  constructor(data?: PartialMessage<MsgUpdateNamespace_MsgSetSendsPaused>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "injective.permissions.v1beta1.MsgUpdateNamespace.MsgSetSendsPaused";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "new_value", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateNamespace_MsgSetSendsPaused {
    return new MsgUpdateNamespace_MsgSetSendsPaused().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateNamespace_MsgSetSendsPaused {
    return new MsgUpdateNamespace_MsgSetSendsPaused().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateNamespace_MsgSetSendsPaused {
    return new MsgUpdateNamespace_MsgSetSendsPaused().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateNamespace_MsgSetSendsPaused | PlainMessage<MsgUpdateNamespace_MsgSetSendsPaused> | undefined, b: MsgUpdateNamespace_MsgSetSendsPaused | PlainMessage<MsgUpdateNamespace_MsgSetSendsPaused> | undefined): boolean {
    return proto3.util.equals(MsgUpdateNamespace_MsgSetSendsPaused, a, b);
  }
}

/**
 * @generated from message injective.permissions.v1beta1.MsgUpdateNamespace.MsgSetBurnsPaused
 */
export class MsgUpdateNamespace_MsgSetBurnsPaused extends Message<MsgUpdateNamespace_MsgSetBurnsPaused> {
  /**
   * @generated from field: bool new_value = 1;
   */
  newValue = false;

  constructor(data?: PartialMessage<MsgUpdateNamespace_MsgSetBurnsPaused>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "injective.permissions.v1beta1.MsgUpdateNamespace.MsgSetBurnsPaused";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "new_value", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateNamespace_MsgSetBurnsPaused {
    return new MsgUpdateNamespace_MsgSetBurnsPaused().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateNamespace_MsgSetBurnsPaused {
    return new MsgUpdateNamespace_MsgSetBurnsPaused().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateNamespace_MsgSetBurnsPaused {
    return new MsgUpdateNamespace_MsgSetBurnsPaused().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateNamespace_MsgSetBurnsPaused | PlainMessage<MsgUpdateNamespace_MsgSetBurnsPaused> | undefined, b: MsgUpdateNamespace_MsgSetBurnsPaused | PlainMessage<MsgUpdateNamespace_MsgSetBurnsPaused> | undefined): boolean {
    return proto3.util.equals(MsgUpdateNamespace_MsgSetBurnsPaused, a, b);
  }
}

/**
 * @generated from message injective.permissions.v1beta1.MsgUpdateNamespaceResponse
 */
export class MsgUpdateNamespaceResponse extends Message<MsgUpdateNamespaceResponse> {
  constructor(data?: PartialMessage<MsgUpdateNamespaceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "injective.permissions.v1beta1.MsgUpdateNamespaceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateNamespaceResponse {
    return new MsgUpdateNamespaceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateNamespaceResponse {
    return new MsgUpdateNamespaceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateNamespaceResponse {
    return new MsgUpdateNamespaceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateNamespaceResponse | PlainMessage<MsgUpdateNamespaceResponse> | undefined, b: MsgUpdateNamespaceResponse | PlainMessage<MsgUpdateNamespaceResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateNamespaceResponse, a, b);
  }
}

/**
 * @generated from message injective.permissions.v1beta1.MsgUpdateNamespaceRoles
 */
export class MsgUpdateNamespaceRoles extends Message<MsgUpdateNamespaceRoles> {
  /**
   * @generated from field: string sender = 1;
   */
  sender = "";

  /**
   * namespace denom to which this updates are applied
   *
   * @generated from field: string namespace_denom = 2;
   */
  namespaceDenom = "";

  /**
   * new role definitions or updated permissions for existing roles
   *
   * @generated from field: repeated injective.permissions.v1beta1.Role role_permissions = 3;
   */
  rolePermissions: Role[] = [];

  /**
   * new addresses to add or new roles for existing addresses to
   *
   * @generated from field: repeated injective.permissions.v1beta1.AddressRoles address_roles = 4;
   */
  addressRoles: AddressRoles[] = [];

  constructor(data?: PartialMessage<MsgUpdateNamespaceRoles>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "injective.permissions.v1beta1.MsgUpdateNamespaceRoles";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "namespace_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "role_permissions", kind: "message", T: Role, repeated: true },
    { no: 4, name: "address_roles", kind: "message", T: AddressRoles, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateNamespaceRoles {
    return new MsgUpdateNamespaceRoles().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateNamespaceRoles {
    return new MsgUpdateNamespaceRoles().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateNamespaceRoles {
    return new MsgUpdateNamespaceRoles().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateNamespaceRoles | PlainMessage<MsgUpdateNamespaceRoles> | undefined, b: MsgUpdateNamespaceRoles | PlainMessage<MsgUpdateNamespaceRoles> | undefined): boolean {
    return proto3.util.equals(MsgUpdateNamespaceRoles, a, b);
  }
}

/**
 * @generated from message injective.permissions.v1beta1.MsgUpdateNamespaceRolesResponse
 */
export class MsgUpdateNamespaceRolesResponse extends Message<MsgUpdateNamespaceRolesResponse> {
  constructor(data?: PartialMessage<MsgUpdateNamespaceRolesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "injective.permissions.v1beta1.MsgUpdateNamespaceRolesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateNamespaceRolesResponse {
    return new MsgUpdateNamespaceRolesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateNamespaceRolesResponse {
    return new MsgUpdateNamespaceRolesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateNamespaceRolesResponse {
    return new MsgUpdateNamespaceRolesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateNamespaceRolesResponse | PlainMessage<MsgUpdateNamespaceRolesResponse> | undefined, b: MsgUpdateNamespaceRolesResponse | PlainMessage<MsgUpdateNamespaceRolesResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateNamespaceRolesResponse, a, b);
  }
}

/**
 * @generated from message injective.permissions.v1beta1.MsgRevokeNamespaceRoles
 */
export class MsgRevokeNamespaceRoles extends Message<MsgRevokeNamespaceRoles> {
  /**
   * @generated from field: string sender = 1;
   */
  sender = "";

  /**
   * namespace denom to which this updates are applied
   *
   * @generated from field: string namespace_denom = 2;
   */
  namespaceDenom = "";

  /**
   * {"address" => array of roles to revoke from this address}
   *
   * @generated from field: repeated injective.permissions.v1beta1.AddressRoles address_roles_to_revoke = 3;
   */
  addressRolesToRevoke: AddressRoles[] = [];

  constructor(data?: PartialMessage<MsgRevokeNamespaceRoles>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "injective.permissions.v1beta1.MsgRevokeNamespaceRoles";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "namespace_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "address_roles_to_revoke", kind: "message", T: AddressRoles, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRevokeNamespaceRoles {
    return new MsgRevokeNamespaceRoles().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRevokeNamespaceRoles {
    return new MsgRevokeNamespaceRoles().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRevokeNamespaceRoles {
    return new MsgRevokeNamespaceRoles().fromJsonString(jsonString, options);
  }

  static equals(a: MsgRevokeNamespaceRoles | PlainMessage<MsgRevokeNamespaceRoles> | undefined, b: MsgRevokeNamespaceRoles | PlainMessage<MsgRevokeNamespaceRoles> | undefined): boolean {
    return proto3.util.equals(MsgRevokeNamespaceRoles, a, b);
  }
}

/**
 * @generated from message injective.permissions.v1beta1.MsgRevokeNamespaceRolesResponse
 */
export class MsgRevokeNamespaceRolesResponse extends Message<MsgRevokeNamespaceRolesResponse> {
  constructor(data?: PartialMessage<MsgRevokeNamespaceRolesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "injective.permissions.v1beta1.MsgRevokeNamespaceRolesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRevokeNamespaceRolesResponse {
    return new MsgRevokeNamespaceRolesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRevokeNamespaceRolesResponse {
    return new MsgRevokeNamespaceRolesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRevokeNamespaceRolesResponse {
    return new MsgRevokeNamespaceRolesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgRevokeNamespaceRolesResponse | PlainMessage<MsgRevokeNamespaceRolesResponse> | undefined, b: MsgRevokeNamespaceRolesResponse | PlainMessage<MsgRevokeNamespaceRolesResponse> | undefined): boolean {
    return proto3.util.equals(MsgRevokeNamespaceRolesResponse, a, b);
  }
}

/**
 * @generated from message injective.permissions.v1beta1.MsgClaimVoucher
 */
export class MsgClaimVoucher extends Message<MsgClaimVoucher> {
  /**
   * @generated from field: string sender = 1;
   */
  sender = "";

  /**
   * @generated from field: string denom = 2;
   */
  denom = "";

  constructor(data?: PartialMessage<MsgClaimVoucher>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "injective.permissions.v1beta1.MsgClaimVoucher";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgClaimVoucher {
    return new MsgClaimVoucher().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgClaimVoucher {
    return new MsgClaimVoucher().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgClaimVoucher {
    return new MsgClaimVoucher().fromJsonString(jsonString, options);
  }

  static equals(a: MsgClaimVoucher | PlainMessage<MsgClaimVoucher> | undefined, b: MsgClaimVoucher | PlainMessage<MsgClaimVoucher> | undefined): boolean {
    return proto3.util.equals(MsgClaimVoucher, a, b);
  }
}

/**
 * @generated from message injective.permissions.v1beta1.MsgClaimVoucherResponse
 */
export class MsgClaimVoucherResponse extends Message<MsgClaimVoucherResponse> {
  constructor(data?: PartialMessage<MsgClaimVoucherResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "injective.permissions.v1beta1.MsgClaimVoucherResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgClaimVoucherResponse {
    return new MsgClaimVoucherResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgClaimVoucherResponse {
    return new MsgClaimVoucherResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgClaimVoucherResponse {
    return new MsgClaimVoucherResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgClaimVoucherResponse | PlainMessage<MsgClaimVoucherResponse> | undefined, b: MsgClaimVoucherResponse | PlainMessage<MsgClaimVoucherResponse> | undefined): boolean {
    return proto3.util.equals(MsgClaimVoucherResponse, a, b);
  }
}

